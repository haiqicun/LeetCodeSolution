public class Solution {
    private final String[] LESS_THAN_20 = {"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    private final String[] TENS = {"Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
    private final String[] THOUSANDS = {"", "Thousand", "Million", "Billion"};

    public String numberToWords(int num) {
        if (num == 0) return "Zero";
        int i = 0;
        String words = "";
        while (num > 0) {
            if (num % 1000 != 0){
                words = helper(num % 1000) +THOUSANDS[i] + " " + words;
            }
    	    num /= 1000;
    	    i++;
        }
    
        return words.trim();
    }

    private String helper(int num) {
        if (num == 0)
            return "";
        else if (num < 20)
        return LESS_THAN_20[num - 1] + " ";
        else if (num < 100)
            return TENS[num / 10 - 2] + " " + helper(num % 10);
        else
            return LESS_THAN_20[num / 100 - 1] + " Hundred " + helper(num % 100);
    }
}


public class Solution {
    public String numberToWords(int num) {
        String[] units = {"", " Thousand", " Million", " Billion"};
        String res = "";
        int u = 0;
        while (num > 0) {
            int tmp = num % 1000;
            if (tmp > 0) {
                res = convert(tmp) + units[u] + (res.length() == 0 ? "" : " ") + res;
            }
            num /= 1000;
            u++;
        } 
        if (res.length() == 0) return "Zero";
        return res;
    }
    private String convert(int n) {
        StringBuilder s = new StringBuilder();
        String[] ten = {"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
        String[] twenty = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
        String[] hun = {"Twenty", "Thirty", "Forty","Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
        int tmp = n / 100;
        if (tmp > 0) {
            s.append(ten[tmp - 1]).append(" Hundred");
        }
        n = n % 100;
        if (n >= 10 && n < 20) {
            if (s.length() > 0) s.append(" ");
            s.append(twenty[n - 10]);
            return s.toString();
        }
        if (n >= 20) {
            if (s.length() > 0) s.append(" ");
            s.append(hun[n/10 - 2]);
        }
        n = n % 10;
        if (n > 0) {
            if (s.length() > 0) s.append(" ");
            s.append(ten[n-1]);
        }
        return s.toString();
    }
}
