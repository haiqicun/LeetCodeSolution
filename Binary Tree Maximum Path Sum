/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        if (root == null) return 0;
        
        helper(root);
        return max;
    }
    
    public int helper(TreeNode root) {
        if (root == null) return 0;
        int leftSum = helper(root.left);
        int rightSum = helper(root.right);
        int res = Math.max(root.val, Math.max(leftSum + root.val,
                                             rightSum + root.val));
        max = Math.max(max, Math.max(res, leftSum+rightSum+root.val));
        return res;
    }
}
