class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if (s == null || s.length() == 0) return 0;
        Map<Character, Integer> map = new HashMap<>();
        int left = 0;
        int res = 0;

        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (map.containsKey(c)) {
                map.put(c, map.get(c)+1);
            } else {
                map.put(c, 1);
            }
            if (map.size() > k) {
                res = Math.max(res, i-left);
                while (map.size() > k) {
                    if (map.get(s.charAt(left)) == 1) {
                        map.remove(s.charAt(left));
                    } else {
                        map.put(s.charAt(left), map.get(s.charAt(left)) -1);
                    }
                    left++;
                }
            }
        }
        return Math.max(res, s.length()-left);
    }
}
