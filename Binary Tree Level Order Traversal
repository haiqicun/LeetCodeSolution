Time complexity: O(n); Spaec complexity: O(logn)

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode root) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        
        if(root==null) return res;
        
        Queue<TreeNode> myqueue = new LinkedList<TreeNode>();
        myqueue.offer(root);
        int lastNum = 1;
        int curNum = 0;
        while(!myqueue.isEmpty()){
            
            ArrayList<Integer> list = new ArrayList<Integer>();
            for(int i=0;i<lastNum;i++){
                TreeNode tempnode = myqueue.poll();
                list.add(tempnode.val);
                if(tempnode.left!=null){
                    curNum++;
                    myqueue.offer(tempnode.left);
                }
                if(tempnode.right!=null){
                    curNum++;
                    myqueue.offer(tempnode.right);
                }
            }
            
            res.add(list);
            lastNum = curNum;
            curNum = 0;
        }
        
        return res;
    }
}
