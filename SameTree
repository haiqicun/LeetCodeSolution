/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p==null&&q==null) return true;
        else if(p==null) return false;
        else if(q==null) return false;
        return (p.val==q.val)&& isSameTree(p.left,q.left)&&isSameTree(p.right,q.right);
    }
}



# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    # @param {TreeNode} p
    # @param {TreeNode} q
    # @return {boolean}
    def isSameTree(self, p, q):
        
        if p==None and q==None:
            return True
        if p!=None and q!=None:
            if p.val!=q.val: return False
            return self.isSameTree(p.left,q.left) and self.isSameTree(p.right,q.right)
        return False
