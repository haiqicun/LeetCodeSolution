public class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        if(s == null || s.length() == 0) return false;
        if(wordDict == null || wordDict.size() == 0) return false;
        
        int len = s.length();
        boolean[] res = new boolean[len+1];
        res[0] = true;
        
        for (int i = 0; i < len; i++) {
            for (int j = 0; j <= i; j++) {
                if (res[j] && wordDict.contains(s.substring(j,i+1))) {
                    res[i+1] = true;
                    break;
                }
            }
        }
        
        return res[len];
    }
}
//time complexity O(n^2); space complexity: O(n)
