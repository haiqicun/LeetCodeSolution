class Solution {
    public int uniquePathsWithObstacles(int[][] grid) {
        if (grid == null || grid.length == 0 || grid[0].length == 0) return 0;
        int m = grid.length;
        int n = grid[0].length;
        
        if (grid[0][0] == 1 || grid[m-1][n-1] == 1) return 0;
        grid[0][0] = 1;
        for (int i = 1; i < n; i++) {
            if (grid[0][i] == 1) grid[0][i] = 0;
            else grid[0][i] = grid[0][i-1];
        }
        for (int j = 1; j < m; j++) {
            if (grid[j][0] == 1) grid[j][0] = 0;
            else grid[j][0] = grid[j-1][0];
        }
        
        for (int i = 1; i < grid.length; i++) {
            for (int j = 1; j < grid[0].length; j++) {
                if (grid[i][j] == 1) grid[i][j] = 0;
                else grid[i][j] = grid[i-1][j] + grid[i][j-1];
            }
        }
        
        return grid[m-1][n-1];
    }
}
