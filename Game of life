public class Solution {
    public void gameOfLife(int[][] board) {
        if (board == null || board.length == 0 || board[0].length == 0) return;
        int row = board.length;
        int col = board[0].length;
        
        int count = 0;
        //00(0) cur =0, next = 0; 01(1) cur = 1, next =1; 
        //10(2) cur = 1, next =0; 11(3) cur = 0, next =1;
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                count = 0;
                for (int m = Math.max(i-1, 0); m < Math.min(i+2,row); m++) {
                    for (int n = Math.max(j-1, 0); n < Math.min(j+2, col); n++) {
                        if (board[m][n] == 1 || board[m][n] == 2) {
                            count++;
                        }
                    }
                }
                count -= board[i][j];
                
                if (board[i][j] == 0 && count == 3) {
                    board[i][j] = 3;
                } else if (board[i][j] == 1 && (count < 2 || count > 3)) {
                    board[i][j] = 2;
                }
            }
        }
        
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                board[i][j] %= 2;
            }
        }
    }
}
//Time complexity: O(mn); Space complexity: O(1);
