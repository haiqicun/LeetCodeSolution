class Solution {
    Map<String, PriorityQueue<String>> map = new HashMap<>();
    public List<String> findItinerary(List<List<String>> tickets) {
        
        List<String> res = new ArrayList<>();
        for (List<String> ticket : tickets) {
            String from  = ticket.get(0);
            String to = ticket.get(1);
            if (!map.containsKey(from)) {
                PriorityQueue<String> queue = new PriorityQueue<>();
                map.put(from, queue);
            }
            map.get(from).add(to);
        }
        dfs("JFK", res);
        Collections.reverse(res);
        return res;
    }
    
    private void dfs(String src, List<String> res) {
        PriorityQueue<String> queue = map.get(src);
        while (queue != null && !queue.isEmpty()) {
            dfs(queue.poll(), res);
        }
        res.add(src);
    }
}
