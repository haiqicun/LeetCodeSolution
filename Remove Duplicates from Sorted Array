Time complexity: O(n); Space complexity: O(1);

public class Solution {
    public int removeDuplicates(int[] nums) {
        
        if(nums==null||nums.length==0) return 0;
        if(nums.length==1) return 1;
        int nextIndex = 1;
        int pre = nums[0];
        
        for(int i=1;i<nums.length;i++){
            if(nums[i]!=pre){
                nums[nextIndex++] = nums[i];
                pre = nums[i];
            }
        }
        
        return nextIndex;
    }
}

class Solution {
    public int removeDuplicates(int[] nums) {
        if (nums.length < 2) return nums.length;
        int left = 0;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] != nums[left]) {
                nums[++left] = nums[i];
            }
        }
        return left+1;
    }
}
