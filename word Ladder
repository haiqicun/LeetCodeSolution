public class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        if (!wordList.contains(endWord)) return 0;
        Set<String> set = new HashSet<String>();
        for (String s : wordList) {
            set.add(s);
        }
        Queue<String> queue = new LinkedList<>();
        queue.offer(beginWord);
        int level = 1;
        while (!queue.isEmpty()) {
            int size = queue.size();
            for (int i = 0; i < size; i++) {
                String s = queue.poll();
                char[] arr = s.toCharArray();
                for (int j = 0; j < arr.length; j++) {
                    char ori = arr[j];
                    for (char c = 'a'; c <= 'z'; c++) {
                        if (c == ori) continue;
                        arr[j] = c;
                        String candi = String.valueOf(arr);
                        if (candi.equals(endWord)) return level+1;
                        if (set.contains(candi)) {
                            queue.offer(candi);
                            set.remove(candi);
                        }
                    }
                    arr[j] = ori;
                }
            }
            level++;
        }
        return 0;
    }
}
