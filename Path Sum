/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) return false;
        return helper(root, 0, targetSum);
    }
    
    private boolean helper(TreeNode root, int preSum, int targetSum) {
        preSum += root.val;
        
        if (root.left != null && root.right != null) {
            return helper(root.left, preSum, targetSum) || helper(root.right, preSum, targetSum);
        }
        if (root.left != null) return helper(root.left, preSum, targetSum);
        if (root.right != null) return helper(root.right, preSum, targetSum);
        return preSum == targetSum;
    }
}
