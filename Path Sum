Time complexity: O(n); Space complexity: O(logn)

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if(root==null) return false;
        
        return helper(root, sum, 0);
        
    }
    
    public boolean helper(TreeNode root, int sum, int temp){
        temp = temp+root.val;
        if(root.left==null&&root.right==null){
            if(sum==temp) return true;
            else return false;
        }
        if(root.left!=null&&root.right!=null){
            return helper(root.left, sum, temp)||helper(root.right, sum, temp);
        }
        if(root.left!=null) return helper(root.left, sum, temp);
        return helper(root.right, sum, temp);
    }
}
