class Solution {
    int max = 0;
    public int maxLength(List<String> arr) {
        if (arr == null || arr.size() == 0) return 0;
        helper(arr, "", 0);
        return max;
    }
    
    public void helper(List<String> arr, String path, int n) {
        max = Math.max(max, path.length());
        for (int j = n; j < arr.size(); j++) {
            if (isUnique(path + arr.get(j))) {
                helper(arr, path+arr.get(j), j+1);
            }
        }
    }
    
    public boolean isUnique(String s) {
        HashSet<Character> set = new HashSet<Character>();
        for (int i = 0; i < s.length(); i++) {
            if (set.contains(s.charAt(i))) return false;
            set.add(s.charAt(i));
        }
        return true;
    }
}
