/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int longestConsecutive(TreeNode root) {
        if (root == null) return 0;
        return Math.max(helper(root.left, 1, root.val), helper(root.right, 1, root.val));
    }
    public int helper(TreeNode root, int count, int pre) {
        if (root == null) return count;
        count = root.val - pre == 1 ? count + 1 : 1;
        int left = helper(root.left, count, root.val);
        int right = helper(root.right, count, root.val);
        int max = Math.max(left, right);
        return Math.max(max, count);
    }
}
