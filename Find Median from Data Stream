class MedianFinder {
    
    PriorityQueue<Integer> min = null;
    PriorityQueue<Integer> max = null;

    /** initialize your data structure here. */
    public MedianFinder() {
        min = new PriorityQueue<Integer>();
        max = new PriorityQueue<Integer>(Collections.reverseOrder());
    }
    
    public void addNum(int num) {
        
        min.add(num);
        max.add(min.poll());
        if (min.size() < max.size()) {
            min.add(max.poll());
        }
        
    }
    
    public double findMedian() {
        if (min.size() == 0) return 0.0;
        if (min.size() == max.size()) {
            return (min.peek() + max.peek()) / 2.0 ;
        }
        return min.peek();
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
 
 Time Complexity: AddNum: O(logn), FindMeidan: O(logn)
 Space Complexity: O(n)
