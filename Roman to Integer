Time complexity: O(n); Space complexity: O(1);

public class Solution {
    public int romanToInt(String s) {
        
        if(s==null||s.length()==0) return 0;
        
        int res = 0;
        for(int i=0;i<s.length();i++){
            switch(s.charAt(i)){
                case 'I': 
                    if(i<s.length()-1&&(s.charAt(i+1)=='V'||s.charAt(i+1)=='X')){
                        res--;
                    }
                    else res++;
                    break;
                case 'V' :
                    res = res+5;
                    break;
                case 'X' :
                    if(i<s.length()-1&&(s.charAt(i+1)=='L'||s.charAt(i+1)=='C')){
                        res = res-10;
                    }
                    else res = res+10;
                    break;
                case 'L':
                    res = res+50;
                    break;
                case 'C' :
                    if(i<s.length()-1&&(s.charAt(i+1)=='D'||s.charAt(i+1)=='M')){
                        res = res-100;
                    }
                    else res = res+100;
                    break;
                case 'D' :
                    res = res+500;
                    break;
                case 'M' :
                    res = res+1000;
                    break;
                default :
                       return 0;
            }
        }
        
        return res;
        
    }
}
