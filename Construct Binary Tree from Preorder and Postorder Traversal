/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructFromPrePost(int[] pre, int[] post) {
        return helper(pre,0, pre.length-1, post, 0, post.length-1);
    }
    
    public TreeNode helper(int[] pre, int start1, int end1, int[] post, int start2, int end2) {
        if (start1 > end1) return null;
        TreeNode root = new TreeNode(pre[start1]);
        if (start1 == end1) return root;
        int index = start2;
        while (index <= end2) {
            if (pre[start1+1] == post[index]) break;
            index++;
        }
        int len = index - start2 + 1;
        root.left = helper(pre, start1+1, start1+len, post, start2, index);
        root.right = helper(pre, start1+len+1, end1, post, index+1, end2-1);
        return root;
    }
}
