Time complexity: O(n); Space complexity: O(1);

public class Solution {
    public int maxProfit(int[] prices) {
        
        if(prices==null||prices.length<2) return 0;
        
        int res = 0;
        for(int i=1;i<prices.length;i++){
            int diff = prices[i]-prices[i-1];
            if(diff>0){
                res = res+diff;
            }
        }
        
        return res;
    }
}




class Solution:
    # @param {integer[]} prices
    # @return {integer}
    def maxProfit(self, prices):
        res = 0
        for i in range(1,len(prices)):
            if prices[i]-prices[i-1]>0:
                res = res+prices[i]-prices[i-1]
                
        return res
