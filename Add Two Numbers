/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null) return l2;
        if (l2 == null) return l1;
        ListNode head = new ListNode(0);
        ListNode pre = null;
        head.next = l1;
        int sum = 0;
        while (l1 != null && l2 != null) {
            sum = sum + l1.val + l2.val;
            l1.val = sum % 10;
            sum = sum/10;
            pre = l1;
            l1 = l1.next;
            l2 = l2.next;
        }
        if (l2 == null) {
            while (l1 != null) {
                if (sum == 0) return head.next;
                sum = sum + l1.val;
                l1.val = sum % 10;
                sum = sum /10;
                pre = l1;
                l1 = l1.next;
            }
            
        }
        if (l1 == null) {
            pre.next = l2;
            while (l2 != null) {
                sum = sum + l2.val;
                l2.val = sum % 10;
                sum = sum / 10;
                pre = l2;
                l2 = l2.next;
            }
        }
        
        if (sum != 0) {
            ListNode last = new ListNode(1);
            pre.next = last;
        }
        
        return head.next;
        
    }
}
