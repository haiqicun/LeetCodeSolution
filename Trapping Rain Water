Time complexity: O(n); Space complexity: O(1)

class Solution {
    public int trap(int[] height) {
        
        if (height == null || height.length < 3) return 0;
        int res = 0;
        
        int l = 0;
        int r = height.length-1;
        while (l < r) {
            if (height[l] <= height[r]) {
                int leftOne = height[l];
                while (l < r && height[l] <= leftOne) {
                    res = res + leftOne - height[l];
                    l++;
                }
            } else {
                int rightOne = height[r];
                while (l < r && height[r] <= rightOne) {
                    res = res + rightOne - height[r];
                    r--;
                }
            }
        }
        
        return res;
        
    }
}
