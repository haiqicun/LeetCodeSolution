Time complexity: O(rsize*csize); Space complexity: O(csize);

public class Solution {
    public int minPathSum(int[][] grid) {
        
        if(grid==null||grid.length==0||grid[0].length==0) return 0;
        int rsize = grid.length;
        int csize = grid[0].length;
        int[] res = new int[csize];
        res[csize-1] = grid[rsize-1][csize-1];
        for(int i=csize-2;i>=0;i--){
            res[i] = res[i+1]+grid[rsize-1][i];
        }
        
        for(int j=rsize-2;j>=0;j--){
            res[csize-1] = res[csize-1]+grid[j][csize-1];
            for(int i=csize-2;i>=0;i--){
                res[i] = Math.min(res[i],res[i+1])+grid[j][i];
            }
        }
        
        return res[0];
        
    }
}
