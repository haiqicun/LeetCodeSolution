/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res = 0;
    public int longestUnivaluePath(TreeNode root) {
        if (root == null) return 0;
        helper(root, root.val);
        return res;
    }
    
    public int helper(TreeNode root, int val) {
        if (root == null) return 0;
        
        int l = helper(root.left, root.val);
        int r = helper(root.right, root.val);
        res = Math.max(res, l + r);
        if (root.val == val) return Math.max(l, r) + 1;
        return 0;
    }
}
