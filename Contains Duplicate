Time complexity: O(nlogn); Space complexity: O(1);

public class Solution {
    public boolean containsDuplicate(int[] nums) {
        
        if(nums==null||nums.length<2) return false;
        
        Arrays.sort(nums);
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]==nums[i+1]) return true;
         }
        return false;
    }
}

Time complexity: O(n); Space complexity: O(n)


public class Solution {
    public boolean containsDuplicate(int[] nums) {
        
        if(nums==null||nums.length<2) return false;
        
        HashSet<Integer> myset = new HashSet<Integer>();
        for(int i=0;i<nums.length;i++){
            if(myset.contains(nums[i])) return true;
            myset.add(nums[i]);
        }
        return false;
    }
}
