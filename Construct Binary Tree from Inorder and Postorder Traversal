/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return helper(inorder, 0, inorder.length-1, postorder, 0, postorder.length-1);
    }
    
    public TreeNode helper(int[] inorder, int start1, int end1, int[] postorder, int start2, int end2) {
        if (start1 > end1) return null;
        TreeNode root = new TreeNode(postorder[end2]);
        if (start1 == end1) return root;
        int index = start1;
        while (index <= end1) {
            if (inorder[index] == postorder[end2]) break;
            index++;
        }
        int len = index - start1;
        root.left = helper(inorder, start1, start1+len-1, postorder, start2, start2+len-1);
        root.right = helper(inorder, index+1, end1, postorder, start2+len, end2-1);
        return root;
    }
}
