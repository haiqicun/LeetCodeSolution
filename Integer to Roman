Time complexity: O(digits of num); Space complexity: O(1);

public class Solution {
    public String intToRoman(int num) {
        
        if(num<=0||num>3999) return "";
        StringBuilder res = new StringBuilder();
        while(num>=1000){
            res.append("M");
            num = num-1000;
        }
        while(num>=900){
            res.append("CM");
            num = num-900;
        }
        while(num>=500){
            res.append("D");
            num = num-500;
        }
        
        while(num>=400){
            res.append("CD");
            num = num-400;
        }
        while(num>=100){
            res.append("C");
            num = num-100;
        }
        while(num>=90){
            res.append("XC");
            num = num-90;
        }
        while(num>=50){
            res.append("L");
            num = num-50;
        }
        while(num>=40){
            res.append("XL");
            num = num-40;
        }
        while(num>=10){
            res.append("X");
            num = num-10;
        }
        while(num>=9){
            res.append("IX");
            num = num-9;
        }
        while(num>=5){
            res.append("V");
            num = num-5;
        }
        while(num>=4){
            res.append("IV");
            num = num-4;
        }
        while(num>=1){
            res.append("I");
            num = num-1;
        }
        return res.toString();
    }
}
